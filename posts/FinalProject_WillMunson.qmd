---
title: "Final Project Vertical Farming"
author: "Will Munson"
date: "8/29/2022"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
---

## Introduction 

For my final project, I will be looking at data related to soil health. This data will involve studying observations from numerous studies, and interpreting how the quality of soil has changed over the years. 
```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Reading in the data 

To know where and how to grow your crops is to understand the nutrients your crops require. This includes how much water the soil can absorb, the composition or texture of the soil, pests, etc. For this project, we'll be focusing in on the types of soil and crops each of these samples use, and how each factor affects the health of the soil.

```{r}
SoilHealth <- read_csv("_data/SoilHealthDB_V0.csv", show_col_types = FALSE)

SoilHealth
```
## Cleaning

Now, this is a large dataset, and it'll require a lot of cleaning up in order to obtain the data we need. So, without further ado, let's get rid of some junk.

```{r}
SoilHealthFixed <- SoilHealth %>%
  select(-contains("Comments") & -contains("Author") & -contains("ClimateType") & -contains("Journal") & -contains("_C") & -contains("NoSubsample") & -contains("BD_T") & -contains("K_") & -contains("pH_T") & -contains("EC_T") & -contains("BS_T") & -contains("Aggre_T") & -contains("Porosity_T") & -contains("SQI") & -contains("_SD") & -contains("Microelement")) %>%
  filter(!is.na(Country)) %>%
  filter(!is.na(CoverCropGroup)) %>%
  filter(!is.na(GrainCropGroup)) %>%
  filter(!is.na(Texture)) %>%
  filter(!is.na(SamplingThickness)) %>%
  filter(!is.na(Duration)) %>%
  filter(!is.na(SoilpH)) %>%
  filter(!str_detect(CoverCropGroup, 'Not_available')) %>%
  filter(!str_detect(Texture, 'NotAvailable')) %>%
  filter(!str_detect(SamplingThickness, 'Not-available')) %>%
  mutate(SamplingThickness = as.double(SamplingThickness)) %>%
  select_if(~!(all(is.na(.)) | all(. == "")))

SoilHealthFixed
```

## Visualizations

Alright, now, let's take a look at some bar graphs to see how each of these samples differ. Let's start with the crop cover groups that our soil has. 

```{r}
SoilHealthFixed %>%
  ggplot(aes(x = CoverCropGroup)) +
  geom_bar() +
  theme(axis.text.x = element_text(angle = 270))
```

As we can see here, the full majority of cover crops are within the legume group. What we can also see here are that there are categories that represent more than one group. For example, many of the samples within the Legume group are vetch. Some of the LG samples grow a combination of vetch and oats, which are in the grass group. LB groups contain vetch and canola, which is part of the brassica group. AVG is an "average of vetch and rye". I believe MMT and MOT are also a mix of legumes and other plants, with MOT implying "this OR that". It's not exactly clear yet, but moving on. 

```{r}
SoilHealthFixed %>%
  ggplot(aes(x = GrainCropGroup)) +
  geom_bar() +
  theme(axis.text.x = element_text(angle = 270))
```

Again, some of the grain crop categories represent multiple groups. AVG, again, means average of a group of crops. C means corn, S usually implies soybeans, O means oats (although it would appear we don't have oat as its own group in this data), and so on. 

From what we see here, corn is a very common crop. A lot of this might have to do with the high demand for corn in more than just food. Corn is often used for feeding livestock, industrial oils, and ethanol production, which is why we see so many cornfields across the country. 

```{r}
SoilHealthFixed %>%
  ggplot(aes(x = Texture)) +
  geom_bar() +
  theme(axis.text.x = element_text(angle = 270))
```

The majority of the samples taken in this study were sandy loam or silty loam, or a mix of the three soil compositions, sand, silt and clay. 

Now let's take a look at which soil textures are most common with legumes AND corn. 

```{r}
SoilHealthFixed %>%
  filter(str_detect(CoverCropGroup, 'Legume')) %>%
  filter(str_detect(GrainCropGroup, 'Corn')) %>%
  ggplot(aes(x = Texture)) +
  geom_bar() +
  theme(axis.text.x = element_text(angle = 270))
```

So, here we notice that most environments where they grow both legumes and corn are in sandy loam, or loamy sand. This could indicate that both plants tend to grow in environments where water is more easily absorbed by the soil. 

Let's take a look at where these samples were studied too.
```{r}
SoilHealthFixed %>%
  ggplot(aes(x = Country)) +
  geom_bar() +
  theme(axis.text.x = element_text(angle = 270))
```

So, as expected, the full majority of our data was taken from the United States and China. I was actually a bit more intrigued by the fact that there were also plenty of samples taken from Zambia as well. 

But this doesn't give us a very useful idea of where everything is - let's take a look at an actual map.

```{r}
library(maps)
map(database = "world")
points(x = SoilHealthFixed$Longitude, y = SoilHealthFixed$Latitude, col = "Red")
```

## Distribution of samples

```{r}
SoilHealthFixed %>%
  #filter(!is.na(SoilpH)) %>%
  #filter(!is.na(Texture)) %>%
  #filter(str_detect(CoverCropGroup, 'Rye')) %>%
  #filter(str_detect(Country, 'USA')) %>%
  #filter(!str_detect(CoverCropGroup, 'Not_available')) %>%
  ggplot(aes(Texture, SoilpH)) +
  geom_boxplot() + 
  geom_hline(yintercept = 5.5, color = "red") +
  geom_hline(yintercept = 7.5, color = "red") +
  theme(axis.text.x = element_text(angle = 270))
```

Between the two red lines are the pH levels for healthy soils. As we can see here, there weren't enough soil samples that offered pH for silt, but what this graph does show is that whatever samples they WERE able to obtain the pH for were not exactly healthy.  

```{r}
SoilHealthFixed %>%
  filter(!is.na(Yield_T)) %>%
  ggplot(aes(CoverCropGroup, Yield_T)) +
  geom_boxplot() +
  #geom_hline(yintercept = 5.5, color = "red") +
  #geom_hline(yintercept = 7.5, color = "red") +
  theme(axis.text.x = element_text(angle = 270))
```

```{r}
ggplot(data = world) +
    geom_sf()
```

